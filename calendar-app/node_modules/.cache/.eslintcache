[{"/home/kiran/workspace/calendar-app/calendar-app/src/index.js":"1","/home/kiran/workspace/calendar-app/calendar-app/src/App.js":"2","/home/kiran/workspace/calendar-app/calendar-app/src/reportWebVitals.js":"3","/home/kiran/workspace/calendar-app/calendar-app/src/MyCalendar.js":"4","/home/kiran/workspace/calendar-app/calendar-app/src/NewCalendar.js":"5"},{"size":535,"mtime":1683644616519,"results":"6","hashOfConfig":"7"},{"size":296,"mtime":1683734528807,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1683644616519,"results":"9","hashOfConfig":"7"},{"size":4916,"mtime":1683748021140,"results":"10","hashOfConfig":"7"},{"size":571,"mtime":1683734400447,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3cbu4l",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kiran/workspace/calendar-app/calendar-app/src/index.js",[],[],"/home/kiran/workspace/calendar-app/calendar-app/src/App.js",["29"],[],"// App.js\n\nimport './App.css';\nimport MyCalendar from './MyCalendar';\nimport MyComponent from './NewCalendar';\n// import MyDatabase from './firebase';\n\nfunction App() {\n\n  return (\n    <div className='app'>\n      <MyCalendar />\n      {/* <MyComponent /> */}\n    </div>\n  );\n}\n\nexport default App;","/home/kiran/workspace/calendar-app/calendar-app/src/reportWebVitals.js",[],[],"/home/kiran/workspace/calendar-app/calendar-app/src/MyCalendar.js",["30","31","32","33","34","35"],[],"import './MyCalendar.css'\nimport { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport localforage from 'localforage';\n\n\nfunction MyCalendar() {\n  const [selectedDate, setselectedDate] = useState(null);\n  const [value, setValue] = useState('');\n  const [classList, setClassList] = useState({});\n\n  const handleDateChange = (selectedDate) => {\n    setselectedDate(selectedDate);\n    setValue('');\n  };\n\n  const user = {\n    1: \"Kiran\",\n    2: \"Rowdy\",\n    3: \"Nikhila\",\n    4: \"Keerthi\",\n    5: \"Keerthana\"\n  };\n\n  useEffect(() => {\n    // Call your function here\n    viewDb();\n  }, []);\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n    const curValue = event.target.value;\n    const currDate = selectedDate.toLocaleDateString();\n    setValue(curValue);\n    writeToDb(currDate, curValue);\n    setClassList(prevList => {\n      // console.log(\"setclasslist\", prevList, currDate, curValue);\n      return { ...prevList, [currDate]: curValue };\n    });\n  }\n\n  const writeToDb = (k, v) => {\n    localforage.setItem(k, v).then(function (value) {\n      console.log('record stored');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  const clearDbByKey = () => {\n    localforage.removeItem(selectedDate.toLocaleDateString()).then(function () {\n      console.log('Record is cleared!', selectedDate);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  const clearDb = () => {\n    localforage.clear().then(function () {\n      console.log('Database is now empty.');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  const readFromDb = (e, key) => {\n    e.preventDefault();\n    console.log(\"readFromDb\", key);\n    if (key !== null) {\n      key = key.toLocaleDateString();\n      localforage.getItem(key).then(function (value) {\n        console.log(\"readFromDb\", key, value);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n\n  const sizeOfDb = () => {\n    localforage.length().then(function (numberOfKeys) {\n      console.log('Current size of Db:', numberOfKeys);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  const viewDb = () => {\n    localforage.iterate(function (value, key, iterationNumber) {\n      console.log([key, value]);\n      setClassList(prevList => {\n        // console.log(\"setclasslist\", prevList, currDate, curValue);\n        return { ...prevList, [key]: value };\n      });\n    }).then(function () {\n      console.log('Iteration has completed');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  const tileClassName = ({ date, view }) => {\n    const curDate = date.toLocaleDateString();\n    if (view === 'month' && curDate in classList) {\n      console.log(\"classList\", classList);\n      return `tile-${user[classList[curDate]]}`;\n    }\n    return '';\n  };\n\n  const buttonStyle = {\n    backgroundColor: '#804859',\n    color: 'white',\n    padding: '10px',\n    borderRadius: '50px',\n    borderColor: \"transparent\",\n    margin: \"5px\"\n  };\n\n  return (\n    <div className='myapp'>\n      <h1 className='main-title'>MyCalendar</h1>\n      <div className='main-container'>\n        <div className='calendar-container'>\n          <Calendar\n            onChange={handleDateChange}\n            value={selectedDate}\n            tileClassName={tileClassName}\n          />\n        </div>\n        <div>\n\n          <p className='view-container'>{selectedDate ? <span className='date-label'> On {selectedDate.toLocaleDateString()}: </span> : ''} &nbsp;\n            {\n              selectedDate &&\n              <select className='select-container' onChange={handleInputChange}>\n                <option value=\"\">Select an option</option>\n                <option value=\"note\"> Add Note</option>\n                <option value=\"1\">User1</option>\n                <option value=\"2\">User2</option>\n                <option value=\"3\">User3</option>\n                <option value=\"4\">User4</option>\n                <option value=\"5\">User5</option>\n              </select>\n            }\n          </p>\n\n          <ul className='label-container'>\n            <li className='tile-Kiran label'> user1 </li>\n            <li className='tile-Rowdy label'> user2 </li>\n            <li className='tile-Nikhila label'> user3 </li>\n            <li className='tile-Keerthi label'> user4 </li>\n            <li className='tile-Keerthana label'> user5 </li>\n          </ul>\n\n          {/* <p>{value ? `Selected: ${user[value]}` : \"\"}</p>\n          <p><button style={buttonStyle} onClick={viewDb}>show records</button>\n            <button style={buttonStyle} onClick={clearDbByKey}> Clear record</button>\n            <button style={buttonStyle} onClick={(e) => readFromDb(e, selectedDate)}> Read record</button>\n            <button style={buttonStyle} onClick={clearDb}> Reset </button>\n          </p> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MyCalendar;","/home/kiran/workspace/calendar-app/calendar-app/src/NewCalendar.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":9,"column":10,"nodeType":"38","messageId":"39","endLine":9,"endColumn":15},{"ruleId":"36","severity":1,"message":"41","line":50,"column":9,"nodeType":"38","messageId":"39","endLine":50,"endColumn":21},{"ruleId":"36","severity":1,"message":"42","line":58,"column":9,"nodeType":"38","messageId":"39","endLine":58,"endColumn":16},{"ruleId":"36","severity":1,"message":"43","line":66,"column":9,"nodeType":"38","messageId":"39","endLine":66,"endColumn":19},{"ruleId":"36","severity":1,"message":"44","line":79,"column":9,"nodeType":"38","messageId":"39","endLine":79,"endColumn":17},{"ruleId":"36","severity":1,"message":"45","line":110,"column":9,"nodeType":"38","messageId":"39","endLine":110,"endColumn":20},"no-unused-vars","'MyComponent' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'clearDbByKey' is assigned a value but never used.","'clearDb' is assigned a value but never used.","'readFromDb' is assigned a value but never used.","'sizeOfDb' is assigned a value but never used.","'buttonStyle' is assigned a value but never used."]